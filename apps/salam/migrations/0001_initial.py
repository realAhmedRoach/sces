# Generated by Django 3.1 on 2020-08-10 13:23

import apps.salam.validators
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Firm',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UID')),
                ('symbol', models.CharField(max_length=4, unique=True, verbose_name='Symbol')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseReceipt',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('commodity', models.CharField(choices=[('CL', 'Crude Oil'), ('ZC', 'Corn'), ('ZS', 'Soybeans'), ('ZW', 'SRW Wheat'), ('KC', 'HRW Wheat'), ('HG', 'Copper'), ('PL', 'Platinum')], max_length=2, verbose_name='Commodity')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantity')),
                ('firm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salam.firm', verbose_name='Firm')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UID')),
                ('fill_time', models.DateTimeField(auto_now_add=True, verbose_name='Fill Time')),
                ('commodity', models.CharField(choices=[('CL', 'Crude Oil'), ('ZC', 'Corn'), ('ZS', 'Soybeans'), ('ZW', 'SRW Wheat'), ('KC', 'HRW Wheat'), ('HG', 'Copper'), ('PL', 'Platinum')], max_length=2, verbose_name='Commodity')),
                ('contract', models.CharField(max_length=4, validators=[apps.salam.validators.validate_contract_code], verbose_name='Contract')),
                ('price', models.DecimalField(decimal_places=3, max_digits=8, verbose_name='Price')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantity')),
                ('long_firm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='long_firm', to='salam.firm', verbose_name='Long Firm')),
                ('short_firm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='short_firm', to='salam.firm', verbose_name='Short Firm')),
            ],
            options={
                'ordering': ['-fill_time', 'commodity', 'contract'],
                'get_latest_by': 'fill_time',
            },
            managers=[
                ('transactions', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UID')),
                ('order_time', models.DateTimeField(auto_now_add=True, verbose_name='Order Time')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantity')),
                ('commodity', models.CharField(choices=[('CL', 'Crude Oil'), ('ZC', 'Corn'), ('ZS', 'Soybeans'), ('ZW', 'SRW Wheat'), ('KC', 'HRW Wheat'), ('HG', 'Copper'), ('PL', 'Platinum')], max_length=2, verbose_name='Commodity')),
                ('contract', models.CharField(choices=[('Q20', 'Aug 2020'), ('U20', 'Sep 2020'), ('V20', 'Oct 2020'), ('X20', 'Nov 2020'), ('Z20', 'Dec 2020'), ('F21', 'Jan 2021'), ('G21', 'Feb 2021'), ('H21', 'Mar 2021'), ('J21', 'Apr 2021'), ('K21', 'May 2021'), ('M21', 'Jun 2021'), ('N21', 'Jul 2021'), ('Q22', 'Aug 2022'), ('U22', 'Sep 2022'), ('V22', 'Oct 2022'), ('X22', 'Nov 2022'), ('Z22', 'Dec 2022'), ('F23', 'Jan 2023'), ('G23', 'Feb 2023'), ('H23', 'Mar 2023'), ('J23', 'Apr 2023'), ('K23', 'May 2023'), ('M23', 'Jun 2023'), ('N23', 'Jul 2023')], max_length=4, validators=[apps.salam.validators.validate_contract_code], verbose_name='Contract')),
                ('price', models.DecimalField(decimal_places=4, max_digits=7, verbose_name='Price')),
                ('side', models.CharField(choices=[('BUY', 'BUY'), ('SELL', 'SELL')], max_length=4, verbose_name='Trade Side')),
                ('order_type', models.CharField(choices=[('MRKT', 'Market'), ('LMT', 'Limit')], default='MRKT', max_length=4, verbose_name='Order Type')),
                ('fill_in_one', models.BooleanField(default=False, verbose_name='Fill In One')),
                ('quantity_filled', models.PositiveIntegerField(default=0, verbose_name='Quantity Filled')),
                ('firm', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='salam.firm', verbose_name='Firm')),
            ],
            options={
                'ordering': ['order_time'],
                'get_latest_by': 'order_time',
            },
        ),
        migrations.CreateModel(
            name='ExchangeUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('firm', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='salam.firm', verbose_name='Firm')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
